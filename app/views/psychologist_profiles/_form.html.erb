<%= form_with(model: psychologist_profile , local: true, html: { multipart: true } ) do |form| %>
  <% if psychologist_profile.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(psychologist_profile.errors.count, "error") %> prohibited this psychologist_profile from being saved:</h2>

      <ul>
        <% psychologist_profile.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  
  

  <div>
    <%= form.label :first_name, style: "display: block" %>
    <%= form.text_field :first_name %>
  </div>

  
  <div>
    <%= form.label :last_name, style: "display: block" %>
    <%= form.text_field :last_name %>
  </div>


  <div>
    <%= form.label :about_me, style: "display: block" %>
    <%= form.textarea :about_me %>
  </div>

  <div class="field">
    <%= form.label :specialty_ids, "Select Specialties" %>
    <%= form.collection_select :specialty_ids, Specialty.all, :id, :name, {}, { multiple: true, size: 5 } %>
  </div>

    <div class="field">
      <%= form.label :client_type_ids , "Select client types" %>
      <%= form.collection_select :client_type_ids , ClientType.all, :id, :name, {}, { multiple: true, size: 5 } %>
    </div>
    
  <div class="field">
    <%= form.label :issue_ids, "Select Issues" %>
    <%= form.collection_select :issue_ids, Issue.all, :id, :name, {}, { multiple: true, size: 5 } %>
  </div>


  

      <div class="field">
        <%= form.label :profile_img %><br>
        <%= form.file_field :profile_img %>
      </div>


         <!-- Image Upload Button -->
  <label class="button is-link is-light">
    Upload Profile Image
    <input type="file" id="imageInput" accept="image/*" hidden>
  </label>

  <!-- Hidden file input to receive cropped blob before form submission -->
  <input type="file" id="croppedImageInput" name="psychologist_profile[profile_img]" hidden>

  <!-- Modal for cropping -->
  <div class="modal" id="cropModal">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Crop Your Image</p>
        <button class="delete" id="closeModal" aria-label="close"></button>
      </header>
      <section class="modal-card-body">
        <img id="imagePreview" style="max-width: 100%;">
      </section>
      <footer class="modal-card-foot">
        <button type="button" class="button is-primary" id="confirmCrop">Confirm</button>
        <button type="button" class="button" id="cancelCrop">Cancel</button>
      </footer>
    </div>
  </div>


  <div>
    <%= form.label :years_of_experience, style: "display: block" %>
    <%= form.number_field :years_of_experience %>
  </div>

  <div>
    <%= form.label :license_number, style: "display: block" %>
    <%= form.text_field :license_number %>
  </div>

<div class="field">
  <%= form.label :country %>
  <%= form.select :country, 
                  options_for_select(country_list, selected: @psychologist_profile.country),
                  { include_blank: 'Select Country' },
                  class: 'select' %>
</div>

  <div>
    <%= form.label :city, style: "display: block" %>
    <%= form.text_field :city %>
  </div>

  <div>
    <%= form.label :address, style: "display: block" %>
    <%= form.text_field :address %>
  </div>

  <div>
    <%= form.label :telegram, style: "display: block" %>
    <%= form.text_field :telegram %>
  </div>

  <div>
    <%= form.label :whatsapp, style: "display: block" %>
    <%= form.text_field :whatsapp %>
  </div>

  <div>
    <%= form.label :contact_phone, style: "display: block" %>
    <%= form.text_field :contact_phone %>
  </div>

  <div>
    <%= form.label :contact_phone2, style: "display: block" %>
    <%= form.text_field :contact_phone2 %>
  </div>

  <div>
    <%= form.label :contact_phone3, style: "display: block" %>
    <%= form.text_field :contact_phone3 %>
  </div>

  <div>
<%= form.select :gender, 
    PsychologistProfile.genders.map { |key, value| [key.humanize, key] },
    { selected: 'unspecified' },
    { class: "form-select" } %>
  </div>

  <div>
    <%= form.label :education, style: "display: block" %>
    <%= form.text_field :education %>
  </div>

  <div>
    <%= form.label :is_doctor, style: "display: block" %>
    <%= form.checkbox :is_doctor %>
  </div>

  <div>
    <%= form.label :is_degree_boolean, style: "display: block" %>
    <%= form.checkbox :is_degree_boolean %>
  </div>



  <div>
    <%= form.submit %>
  </div>
<% end %>


<script>
let cropper;
const imageInput = document.getElementById("imageInput");
const imagePreview = document.getElementById("imagePreview");
const cropModal = document.getElementById("cropModal");
const confirmCrop = document.getElementById("confirmCrop");
const cancelCrop = document.getElementById("cancelCrop");
const closeModal = document.getElementById("closeModal");
const croppedImageInput = document.getElementById("croppedImageInput");

// Open modal on file selection
imageInput.addEventListener("change", function () {
  const file = this.files[0];
  if (!file) return;

  const reader = new FileReader();
  reader.onload = function (e) {
    imagePreview.src = e.target.result;
    cropModal.classList.add("is-active");

    imagePreview.onload = function () {
      if (cropper) cropper.destroy();
      cropper = new Cropper(imagePreview, {
        aspectRatio: 1,
        viewMode: 1,
      });
    };
  };
  reader.readAsDataURL(file);
});

// Close modal
[cancelCrop, closeModal].forEach((btn) => {
  btn.addEventListener("click", () => {
    cropModal.classList.remove("is-active");
    if (cropper) cropper.destroy();
  });
});

// On confirm crop: generate blob, create a File, and assign to hidden input
confirmCrop.addEventListener("click", () => {
  cropper.getCroppedCanvas().toBlob((blob) => {
    const file = new File([blob], "cropped_profile.jpg", { type: "image/jpeg" });

    // Simulate user selecting this file in hidden input
    const dataTransfer = new DataTransfer();
    dataTransfer.items.add(file);
    croppedImageInput.files = dataTransfer.files;

    // Close modal
    cropModal.classList.remove("is-active");
    cropper.destroy();
  });
});
</script>