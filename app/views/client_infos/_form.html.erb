<div class="container">
  <div class="columns is-centered">
    <div class="column is-12-mobile is-10-tablet is-8-desktop is-6-widescreen">
      <div class="form-card">
        <h1 class="form-title"><%= t('client_infos.form.title') %></h1>

        <%= form_with(model: [@client_info.psychologist_profile || nil, @client_info], class: "form-content") do |f| %>
          <!-- Errors -->
          <% if client_info.errors.any? %>
            <div class="error-banner">
              <button class="error-close" type="button">&times;</button>
              <ul class="error-list">
                <% client_info.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
                <% end %>
              </ul>
            </div>
          <% end %>

          <!-- Personal Info -->
          <div class="form-section">
            <h2 class="section-title"><%= t('client_infos.form.personal_information') %></h2>
            <div class="form-grid">
              <div class="form-group">
                <label class="form-label"><%= t('client_infos.form.placeholder.first_name') %></label>
                <%= f.text_field :first_name, class: "form-input", placeholder: t('client_infos.form.placeholder.first_name') %>
              </div>
              <div class="form-group">
                <label class="form-label"><%= t('client_infos.form.placeholder.last_name') %></label>
                <%= f.text_field :last_name, class: "form-input", placeholder: t('client_infos.form.placeholder.last_name') %>
              </div>
            </div>
            <div class="form-group">
              <label class="form-label"><%= t('client_infos.form.placeholder.year_of_birth') %></label>
              <%= f.select :year_of_birth,
                    (Time.current.year - 16).downto(1930).to_a,
                    { prompt: t('client_infos.form.placeholder.year_of_birth') },
                    { class: "form-input" } %>
            </div>
          </div>

          <!-- Location -->
          <div class="form-section">
            <h2 class="section-title"><%= t('client_infos.form.location_information') %></h2>

<div class="form-group">
  <label class="form-label"><%= t('client_infos.form.placeholder.city') %></label>

  <%= f.select :city,
        options_for_select(
          COUNTRIES_AND_CITIES.flat_map do |c|
            (c[:cities] || []).map do |city|
              ["#{city.titleize}, #{c[:name].titleize}", "#{city.titleize}, #{c[:name].titleize}"]
            end
          end,
          @current_city&.titleize
        ),
        { prompt: t('client_infos.form.placeholder.city') },
        id: "city_input",
        class: "form-input"
      %>

  <p class="form-help"><%= t('client_infos.form.help_text.location_detection') %></p>
</div>




            
            <div class="form-group">
              <label class="form-label"><%= t('client_infos.form.placeholder.timezone') %></label>
              <%= f.select :timezone,
                    TZInfo::Timezone.all_identifiers.map { |id|
                      begin
                        tz = TZInfo::Timezone.get(id)
                        offset = tz.current_period.offset.utc_total_offset / 3600.0
                        formatted_offset = "GMT#{offset >= 0 ? '+' : ''}#{offset.to_i}"
                        ["(#{formatted_offset}) #{id}", id]
                      rescue TZInfo::InvalidTimezoneIdentifier
                        nil
                      end
                    }.compact,
                    { prompt: t('client_infos.form.placeholder.timezone') },
                    { id: "timezone_select", class: "form-input" } %>
              <p class="form-help"><%= t('client_infos.form.help_text.timezone_detection') %></p>
            </div>
          </div>

          <!-- Therapy Reason -->
          <div class="form-section">
            <h2 class="section-title"><%= t('client_infos.form.therapy_information') %></h2>
            <div class="form-group">
              <label class="form-label"><%= t('client_infos.form.placeholder.reason_for_therapy') %></label>
              <%= f.text_area :reason_for_therapy, class: "form-textarea", rows: 3, placeholder: t('client_infos.form.placeholder.reason_for_therapy') %>
            </div>
          </div>

          <!-- Contacts -->
          <div class="form-section">
            <h2 class="section-title"><%= t('client_infos.form.contact_information') %></h2>
            <div id="contacts-list">
              <%= f.fields_for :client_contacts do |contact_form| %>
                <%= render "client_contact_fields", f: contact_form %>
              <% end %>
            </div>

            <template id="contact-template">
              <%= f.fields_for(:client_contacts, ClientContact.new, child_index: "NEW_RECORD") do |cf| %>
                <%= render "client_contact_fields", f: cf %>
              <% end %>
            </template>

            <button type="button" id="add-contact" class="add-contact-btn">
              <span>+ <%= t('client_infos.form.add_contact') %></span>
            </button>
          </div>

          <!-- Submit -->
          <div class="form-actions">
            <%= f.submit t('client_infos.form.submit_button'), class: "submit-btn" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("turbo:load", function () {
    const cityInput = document.getElementById("city_input");
    if (cityInput && navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(pos => {
        fetch(`https://nominatim.openstreetmap.org/reverse?lat=${pos.coords.latitude}&lon=${pos.coords.longitude}&format=json`)
          .then(r => r.json())
          .then(data => {
            const city = data.address?.city || data.address?.town || data.address?.village || "";
            const country = data.address?.country || "";
            if (city && country && !cityInput.value) cityInput.value = `${city}, ${country}`;
          }).catch(() => {});
      });
    }

    const tzSelect = document.getElementById("timezone_select");
    if (tzSelect && !tzSelect.value) {
      const browserTz = Intl.DateTimeFormat().resolvedOptions().timeZone;
      if (browserTz && tzSelect.querySelector(`option[value="${browserTz}"]`)) tzSelect.value = browserTz;
    }

    const addBtn = document.getElementById("add-contact");
    const template = document.getElementById("contact-template")?.innerHTML;
    const list = document.getElementById("contacts-list");

    if (addBtn && template && list) {
      addBtn.onclick = () => {
        const newId = Date.now();
        list.insertAdjacentHTML("beforeend", template.replace(/NEW_RECORD/g, newId));
      };

      list.onclick = e => {
        if (e.target.classList.contains("remove-contact")) {
          e.preventDefault();
          const row = e.target.closest(".contact-row");
          const destroy = row.querySelector("input[name*='_destroy']");
          if (destroy) {
            destroy.value = "1";
            row.style.display = "none";
          } else {
            row.remove();
          }
        }
      };
    }

    document.querySelectorAll('.error-close').forEach(btn => {
      btn.onclick = () => btn.closest('.error-banner').style.display = 'none';
    });
  });
</script>

<style>
  .form-card {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    padding: 2rem;
  }

  .form-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin: 0 0 1.5rem 0;
    text-align: center;
  }

  .error-banner {
    background: #fef2f2;
    border: 1px solid #fecaca;
    border-radius: 6px;
    padding: 1rem;
    margin-bottom: 1.5rem;
    position: relative;
  }

  .error-close {
    position: absolute;
    top: 0.5rem;
    right: 0.75rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    color: #991b1b;
    cursor: pointer;
    line-height: 1;
    padding: 0;
  }

  .error-list {
    list-style: none;
    margin: 0;
    padding: 0;
    color: #991b1b;
    font-size: 0.875rem;
  }

  .error-list li { margin-bottom: 0.25rem; }
  .error-list li:last-child { margin-bottom: 0; }

  .form-section {
    margin-bottom: 1.75rem;
  }

  .section-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e5e7eb;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.375rem;
  }

  .form-input,
  .form-textarea {
    width: 100%;
    padding: 0.625rem 0.875rem;
    font-size: 0.9375rem;
    color: #111827;
    background: #fff;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    transition: border-color 0.15s;
  }

  .form-input { height: 2.75rem; }
  .form-textarea { min-height: 90px; resize: vertical; }

  .form-input:focus,
  .form-textarea:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59,130,246,0.1);
  }

  .form-help {
    font-size: 0.75rem;
    color: #6b7280;
    margin: 0.375rem 0 0 0;
  }

  .contact-row {
    background: #f9fafb;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    padding: 1rem;
    margin-bottom: 0.75rem;
    display: flex;
    gap: 0.75rem;
    align-items: flex-end;
  }

  .contact-row .form-group {
    flex: 1;
    margin-bottom: 0;
  }

  .remove-contact {
    background: #ef4444;
    color: white;
    border: none;
    border-radius: 4px;
    width: 32px;
    height: 32px;
    font-size: 1.25rem;
    cursor: pointer;
    transition: background 0.15s;
    flex-shrink: 0;
    line-height: 1;
  }

  .remove-contact:hover {
    background: #dc2626;
  }

  .add-contact-btn {
    width: 100%;
    padding: 0.75rem;
    background: #fff;
    border: 1.5px dashed #d1d5db;
    border-radius: 6px;
    color: #6b7280;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s;
  }

  .add-contact-btn:hover {
    background: #f9fafb;
    border-color: #9ca3af;
    color: #374151;
  }

  .form-actions {
    padding-top: 1.5rem;
    border-top: 1px solid #e5e7eb;
  }

  .submit-btn {
    width: 100%;
    padding: 0.75rem 1.5rem;
    background: #3b82f6;
    color: #fff;
    border: none;
    border-radius: 6px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.15s;
  }

  .submit-btn:hover {
    background: #2563eb;
  }

  @media (max-width: 768px) {
    .form-card {
      padding: 1.5rem;
      border-radius: 0;
    }
    
    .form-grid {
      grid-template-columns: 1fr;
    }

    .contact-row {
      flex-direction: column;
      align-items: stretch;
    }

    .remove-contact {
      width: 100%;
      height: 2.5rem;
    }
  }
</style>