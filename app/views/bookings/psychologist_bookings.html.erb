<div class="flash-messages-container">
  <% flash.each do |type, msg| %>
    <% bulma_class = case type.to_sym
                     when :notice then "is-success"
                     when :alert  then "is-danger"
                     when :warning then "is-warning"
                     else "is-info"
                     end %>
    <div class="notification <%= bulma_class %>">
      <button class="delete" aria-label="delete" data-action="click->flash-messages#close"></button>
      <%= msg %>
    </div>
  <% end %>
</div>

<h1 class="title is-4 has-text-centered"><%= t('.bookings_overview_title') %></h1>

<!-- Filter Section -->
<div class="filter-container px-4 py-2">
  <div class="field">
    <label class="label has-text-weight-normal"><%= t('.filter_by_status') %></label>
    <div class="control">
      <div class="buttons has-addons is-fullwidth">
        <button class="button is-small is-fullwidth status-filter <%= 'is-primary' if params[:status].nil? || params[:status] == 'all' %>" data-status="all"><%= t('.filter_all_statuses') %></button>
        <button class="button is-small is-fullwidth status-filter <%= 'is-primary' if params[:status] == 'confirmed' %>" data-status="confirmed"><%= t('.status_tags.confirmed') %></button>
        <button class="button is-small is-fullwidth status-filter <%= 'is-primary' if params[:status] == 'pending' %>" data-status="pending"><%= t('.status_tags.pending') %></button>
        <button class="button is-small is-fullwidth status-filter <%= 'is-primary' if params[:status] == 'cancelled' %>" data-status="cancelled"><%= t('.status_tags.cancelled') %></button>
        <button class="button is-small is-fullwidth status-filter <%= 'is-primary' if params[:status] == 'unknown' %>" data-status="unknown"><%= t('.status_tags.unknown') %></button>
      </div>
    </div>
  </div>
  <div class="field">
    <label class="label has-text-weight-normal"><%= t('.filter_by_date') %></label>
    <div class="control">
      <div class="select is-fullwidth">
        <select id="date-range-filter">
          <option value="today" <%= 'selected' if params[:range] == 'today' %>><%= t('.range_today') %></option>
          <option value="week" <%= 'selected' if params[:range] == 'week' %>><%= t('.range_week') %></option>
          <option value="month" <%= 'selected' if params[:range] == 'month' %>><%= t('.range_month') %></option>
        </select>
      </div>
    </div>
  </div>
</div>

<!-- Bookings List -->
<div class="bookings-container px-4">
  <% if @upcoming_bookings.any? %>
    <% @upcoming_bookings.group_by { |booking| booking.start_time.to_date }.each do |date, bookings| %>
      <div class="booking-group mb-4">
        <h2 class="subtitle is-5 has-text-weight-bold"><%= date.strftime('%B %d, %Y') %></h2>
        <% bookings.each do |booking| %>
          <div class="box booking-card mb-2" data-status="<%= booking.status || 'unknown' %>">
            <div class="columns is-mobile">
              <div class="column is-narrow">
                <span class="tag <%= case booking.status&.to_sym
                                    when :confirmed then 'is-success'
                                    when :pending then 'is-warning'
                                    when :cancelled then 'is-danger'
                                    else 'is-info'
                                    end %>">
                  <%= booking.status.present? ? t(".status_tags.#{booking.status.underscore}") : t('.status_tags.unknown') %>
                </span>
                <span>
                <%= booking.created_by %>
                </span>
              </div>
              <div class="column">
<p class="has-text-weight-bold">
  <% if booking.client_info.present? %>
    <%= link_to booking.client_info.full_name, client_info_path(booking.client_info) %>
  <% else %>
    N/A
  <% end %>
</p>                <p class="is-size-7"><%= booking.service&.name || 'N/A' %></p>
                <p class="is-size-7">
                  <span class="utc-date-time-range"
                        data-start-utc="<%= booking.start_time.utc.iso8601 %>"
                        data-end-utc="<%= booking.end_time&.utc&.iso8601 %>">
                    <%= t('.loading_time') %>
                  </span>
                </p>
                <p class="is-size-7"><%= t('bookings.psychologist_bookings.duration_minutes', count: booking.service&.duration_minutes || 0) %></p>
              </div>
            </div>
            <div class="buttons is-right">
              <% if booking.created_by == 'client' && booking.status == 'pending' %>
                <%= button_to t('.confirm_button'), confirm_booking_path(booking), method: :post, class: 'button is-small is-success' %>
                <%= button_to t('.decline_button'), decline_booking_path(booking), method: :post, class: 'button is-small is-danger' %>
              <% end %>
              <%= link_to t('.view_button'), psychologist_profile_booking_path(current_user.psychologist_profile, booking), class: 'button is-small is-primary is-light' %>
              <%= link_to t('.edit_button'), edit_psychologist_profile_booking_path(current_user.psychologist_profile, booking), class: 'button is-small is-info is-light' %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  <% else %>
    <div class="notification is-info has-text-centered">
      <%= t('.no_bookings') %>
    </div>
  <% end %>
</div>

<!-- Modal for Booking Details -->
<div class="modal" id="booking-modal">
  <div class="modal-background"></div>
  <div class="modal-content">
    <div class="box" id="booking-modal-content"></div>
  </div>
  <button class="modal-close is-large" aria-label="close" onclick="document.getElementById('booking-modal').classList.remove('is-active')"></button>
</div>

<script>
  document.addEventListener("turbo:load", function () {
    const bookings = [
      <% @upcoming_bookings.each do |booking| %>
        {
          id: <%= booking.id %>,
          start: '<%= booking.start_time.utc.iso8601 %>',
          end: '<%= booking.end_time&.utc&.iso8601 || booking.start_time.utc.iso8601 %>',
          status: '<%= booking.status || 'unknown' %>',
          clientName: '<%= (booking.client_info&.full_name || 'N/A').to_json %>',
          service: '<%= booking.service&.name&.to_json || 'N/A' %>',
          notes: '<%= booking.notes&.to_json || '' %>',
          createdBy: '<%= booking.created_by || 'na' %>',
          psychologistProfileId: <%= current_user.psychologist_profile.id %>
        },
      <% end %>
    ];

    // Filter by Status
    document.querySelectorAll('.status-filter').forEach(button => {
      button.addEventListener('click', () => {
        const status = button.dataset.status;
        document.querySelectorAll('.status-filter').forEach(btn => btn.classList.remove('is-primary'));
        button.classList.add('is-primary');
        document.querySelectorAll('.booking-card').forEach(card => {
          card.style.display = (status === 'all' || card.dataset.status === status) ? '' : 'none';
        });
      });
    });

    // Filter by Date Range
    document.getElementById('date-range-filter').addEventListener('change', (e) => {
      const range = e.target.value;
      const now = new Date();
      let startDate, endDate;
      if (range === 'today') {
        startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
        endDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      } else if (range === 'week') {
        startDate = new Date(now.setDate(now.getDate() - now.getDay()));
        endDate = new Date(now.setDate(now.getDate() + 6));
      } else if (range === 'month') {
        startDate = new Date(now.getFullYear(), now.getMonth(), 1);
        endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);
      }
      document.querySelectorAll('.booking-group').forEach(group => {
        const date = new Date(group.querySelector('.subtitle').textContent);
        group.style.display = (date >= startDate && date <= endDate) ? '' : 'none';
      });
    });

    // Modal Function
    function openBookingModal(booking) {
      const modalContent = `
        <p><strong><%= t('.client_header') %>:</strong> ${booking.clientName}</p>
        <p><strong><%= t('.service_header') %>:</strong> ${booking.service}</p>
        <p><strong><%= t('.status_header') %>:</strong> ${booking.status}</p>
        <p><strong><%= t('.start_time_header') %>:</strong> ${new Date(booking.start).toLocaleString()}</p>
        <p><strong><%= t('.end_time_header') %>:</strong> ${new Date(booking.end).toLocaleString()}</p>
        <p><strong><%= t('.notes') %>:</strong> ${booking.notes || 'None'}</p>
        <div class="buttons">
          ${booking.status === 'pending' && booking.createdBy === 'client' ? `
            <form action="/psychologist_profiles/${booking.psychologistProfileId}/bookings/${booking.id}/confirm" method="post">
              <input type="hidden" name="_method" value="post">
              <button type="submit" class="button is-success is-small"><%= t('.confirm_button') %></button>
            </form>
            <form action="/psychologist_profiles/${booking.psychologistProfileId}/bookings/${booking.id}/decline" method="post">
              <input type="hidden" name="_method" value="post">
              <button type="submit" class="button is-danger is-small"><%= t('.decline_button') %></button>
            </form>
          ` : ''}
          <a href="/psychologist_profiles/${booking.psychologistProfileId}/bookings/${booking.id}" class="button is-primary is-small"><%= t('.view_button') %></a>
          <a href="/psychologist_profiles/${booking.psychologistProfileId}/bookings/${booking.id}/edit" class="button is-info is-small"><%= t('.edit_button') %></a>
          <form action="/psychologist_profiles/${booking.psychologistProfileId}/bookings/${booking.id}" method="post" data-turbo-confirm="<%= t('.delete_confirm') %>">
            <input type="hidden" name="_method" value="delete">
            <button type="submit" class="button is-danger is-small"><%= t('.delete_button') %></button>
          </form>
        </div>
      `;
      document.getElementById('booking-modal-content').innerHTML = modalContent;
      document.getElementById('booking-modal').classList.add('is-active');
    }

    // Attach click handlers to view buttons
    document.querySelectorAll('.booking-card .button.is-primary').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const bookingId = button.closest('.booking-card').dataset.bookingId;
        const booking = bookings.find(b => b.id == bookingId);
        if (booking) openBookingModal(booking);
      });
    });
  });
</script>

<style>
  .filter-container {
    background: #f5f5f5;
    border-radius: 8px;
    margin-bottom: 1rem;
  }
  .booking-card {
    border-radius: 8px;
    padding: 1rem;
  }
  .booking-card .tag {
    margin-right: 0.5rem;
  }
  .booking-card .buttons {
    margin-top: 0.5rem;
  }
  .booking-group .subtitle {
    margin-bottom: 1rem;
    color: #333;
  }
  @media (max-width: 768px) {
    .button.is-small {
      font-size: 0.85rem;
    }
    .booking-card .column {
      padding: 0.5rem;
    }
  }
</style>