<div class="flash-messages-container">
  <% flash.each do |type, msg| %>
    <% bulma_class = case type.to_sym
                     when :notice then "is-success"
                     when :alert  then "is-danger"
                     when :warning then "is-warning"
                     else "is-info"
                     end %>
    <div class="notification <%= bulma_class %>">
      <button class="delete" aria-label="delete" data-action="click->flash-messages#close"></button>
      <%= msg %>
    </div>
  <% end %>
</div>

<!-- Filter Section -->
<div class="filter-container">
  <div class="filter-header">
    <h2 class="filter-title"><%= t('.filter_by_status') %></h2>
    <div class="status-filters">
      <button class="status-btn <%= 'active' if params[:status].nil? || params[:status] == 'all' %>" data-status="all">
        <%= t('.filter_all_statuses') %> <span class="count"><%= @status_counts[:all] || 0 %></span>
      </button>
      <button class="status-btn <%= 'active' if params[:status] == 'confirmed' %>" data-status="confirmed">
        <%= t('.status_tags.confirmed') %> <span class="count"><%= @status_counts[:confirmed] || 0 %></span>
      </button>
      <button class="status-btn <%= 'active' if params[:status] == 'pending' %>" data-status="pending">
        <%= t('.status_tags.pending') %> <span class="count"><%= @status_counts[:pending] || 0 %></span>
      </button>
      <button class="status-btn <%= 'active' if params[:status] == 'cancelled' %>" data-status="cancelled">
        <%= t('.status_tags.cancelled') %> <span class="count"><%= @status_counts[:cancelled] || 0 %></span>
      </button>
      <button class="status-btn <%= 'active' if params[:status] == 'unknown' %>" data-status="unknown">
        <%= t('.status_tags.unknown') %> <span class="count"><%= @status_counts[:unknown] || 0 %></span>
      </button>
    </div>
  </div>

  <div class="filter-controls">
    <div class="filter-group">
      <label class="filter-label"><%= t('.filter_by_service') %></label>
      <div class="select is-fullwidth is-small">
        <select id="service-filter">
          <option value="all" <%= 'selected' if params[:service_id].nil? %>><%= t('.filter_all_services') %></option>
          <% @services.each do |service| %>
            <option value="<%= service.id %>" <%= 'selected' if params[:service_id] == service.id.to_s %>><%= service.name %></option>
          <% end %>
        </select>
      </div>
    </div>

    <div class="filter-group">
      <label class="filter-label"><%= t('.filter_by_week') %></label>
      <div class="select is-fullwidth is-small">
        <select id="week-filter">
          <option value="current" <%= 'selected' if params[:week] == 'current' %>><%= t('.week_current') %></option>
          <option value="next" <%= 'selected' if params[:week] == 'next' %>><%= t('.week_next') %></option>
          <option value="all" <%= 'selected' if params[:week].nil? || params[:week] == 'all' %>><%= t('.week_all') %></option>
        </select>
      </div>
    </div>

    <div class="filter-group">
      <label class="filter-label"><%= t('.search_by_client') %></label>
      <input class="input is-small" type="text" id="client-search" placeholder="<%= t('search_client_placeholder') %>">
    </div>
  </div>
</div>

<!-- Bookings List -->
<div class="bookings-container">
  <% if @upcoming_bookings.any? %>
    <% @upcoming_bookings.group_by { |booking| booking.start_time.to_date }.each do |date, bookings| %>
      <div class="booking-group" data-date="<%= date.to_s %>">
        <h3 class="date-header"><%= date.strftime('%B %d, %Y') %></h3>
        <% bookings.each do |booking| %>
          <div class="booking-card" data-status="<%= booking.status || 'unknown' %>" data-service-id="<%= booking.service_id || '' %>" data-client-name="<%= booking.client_info&.full_name&.downcase || '' %>">
            <div class="booking-header">
              <div class="booking-info">
                <div class="client-name">
                  <% if booking.client_info.present? %>
                    <%= link_to booking.client_info.full_name, client_info_path(booking.client_info), class: 'client-link' %>
                  <% else %>
                    N/A
                  <% end %>
                </div>
                <div class="booking-meta">
                  <span class="service-name"><%= booking.service&.name || 'N/A' %></span>
                  <span class="meta-separator">â€¢</span>
                  <span class="duration"><%= t('bookings.psychologist_bookings.duration_minutes', count: booking.service&.duration_minutes || 0) %></span>
                </div>
                <div class="booking-time">
                  <span class="utc-date-time-range"
                        data-start-utc="<%= booking.start_time.utc.iso8601 %>"
                        data-end-utc="<%= booking.end_time&.utc&.iso8601 %>">
                    <%= t('.loading_time') %>
                  </span>
                </div>
              </div>
              <div class="booking-badges">
                <span class="status-badge <%= booking.status || 'unknown' %>">
                  <%= booking.status.present? ? t(".status_tags.#{booking.status.underscore}") : t('.status_tags.unknown') %>
                </span>
                <span class="created-badge"><%= booking.created_by %></span>
              </div>
            </div>
            <div class="booking-actions">
            <% unless booking.status == 'cancelled' %>
              <% if booking.created_by == 'client' && booking.status == 'pending' %>
                <%= button_to t('.confirm_button'),
                    confirm_psychologist_profile_booking_path(booking.psychologist_profile, booking, redirect_to: 'psychologist_bookings'),
                    method: :patch,
                    class: 'btn-action btn-confirm' %>

                <%= button_to t('.decline_button'),
                    decline_psychologist_profile_booking_path(booking.psychologist_profile, booking, redirect_to: 'psychologist_bookings'),
                    method: :patch,
                    class: 'btn-action btn-decline' %>
              <% else %>
                    <%= button_to t('.cancel_button'),
                    cancel_psychologist_profile_booking_path(booking.psychologist_profile, booking, redirect_to: 'psychologist_bookings'),
                    method: :patch,
                    class: 'btn-action btn-cancel' %>
              <% end %>
             <% end %> 
              <%= link_to t('.view_button'), psychologist_profile_booking_path(booking.psychologist_profile, booking), class: 'btn-action btn-view' %>
              <%= link_to t('.edit_button'), edit_psychologist_profile_booking_path(booking.psychologist_profile, booking), class: 'btn-action btn-edit' %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  <% else %>
    <div class="no-bookings">
      <i class="fas fa-calendar-times"></i>
      <p><%= t('.no_bookings') %></p>
    </div>
  <% end %>
</div>

<!-- Modal for Booking Details -->
<div class="modal" id="booking-modal">
  <div class="modal-background"></div>
  <div class="modal-content">
    <div class="box" id="booking-modal-content"></div>
  </div>
  <button class="modal-close is-large" aria-label="close" onclick="document.getElementById('booking-modal').classList.remove('is-active')"></button>
</div>

<script>
  document.addEventListener("turbo:load", function () {
    const bookings = [
      <% @upcoming_bookings.each do |booking| %>
        {
          id: <%= booking.id %>,
          start: '<%= booking.start_time.utc.iso8601 %>',
          end: '<%= booking.end_time&.utc&.iso8601 || booking.start_time.utc.iso8601 %>',
          status: '<%= booking.status || 'unknown' %>',
          clientName: '<%= (booking.client_info&.full_name || 'N/A').to_json %>',
          service: '<%= booking.service&.name&.to_json || 'N/A' %>',
          serviceId: <%= booking.service_id || 'null' %>,
          notes: '<%= booking.notes&.to_json || '' %>',
          createdBy: '<%= booking.created_by || 'na' %>',
          psychologistProfileId: <%= current_user.psychologist_profile.id %>
        },
      <% end %>
    ];

    // Filter by Status
    document.querySelectorAll('.status-btn').forEach(button => {
      button.addEventListener('click', () => {
        const status = button.dataset.status;
        document.querySelectorAll('.status-btn').forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        applyFilters();
      });
    });

    // Filter by Service
    document.getElementById('service-filter').addEventListener('change', () => {
      applyFilters();
    });

    // Search by Client Name
    document.getElementById('client-search').addEventListener('input', () => {
      applyFilters();
    });

    // Filter by Week
    document.getElementById('week-filter').addEventListener('change', () => {
      applyFilters();
    });

    function applyFilters() {
      const status = document.querySelector('.status-btn.active')?.dataset.status || 'all';
      const serviceId = document.getElementById('service-filter').value;
      const clientSearch = document.getElementById('client-search').value.toLowerCase();
      const weekFilter = document.getElementById('week-filter').value;
      
      const now = new Date();
      let startDate, endDate;
      if (weekFilter === 'current') {
        startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());
        endDate = new Date(startDate.getTime());
        endDate.setDate(endDate.getDate() + 6);
      } else if (weekFilter === 'next') {
        startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay() + 7);
        endDate = new Date(startDate.getTime());
        endDate.setDate(endDate.getDate() + 6);
      } else {
        startDate = new Date(0);
        endDate = new Date(8640000000000000);
      }

      document.querySelectorAll('.booking-group').forEach(group => {
        const date = new Date(group.dataset.date);
        const showGroup = date >= startDate && date <= endDate;
        group.style.display = showGroup ? '' : 'none';

        group.querySelectorAll('.booking-card').forEach(card => {
          const cardStatus = card.dataset.status;
          const cardServiceId = card.dataset.serviceId;
          const cardClientName = card.dataset.clientName;
          const showCard = 
            (status === 'all' || cardStatus === status) &&
            (serviceId === 'all' || cardServiceId === serviceId) &&
            (clientSearch === '' || cardClientName.includes(clientSearch));
          
          card.style.display = showCard && showGroup ? '' : 'none';
        });

        // Hide group if no cards are visible
        group.style.display = Array.from(group.querySelectorAll('.booking-card')).some(card => card.style.display !== 'none') ? '' : 'none';
      });
    }


    // Initial filter application
    applyFilters();
  });
</script>

<style>
  :root {
    --blue: #3273dc;
    --charcoal: #2f3640;
    --light-grey: #f8f9fa;
    --border-grey: #e1e4e8;
    --text-grey: #586069;
    --success: #28a745;
    --warning: #ffc107;
    --danger: #dc3545;
  }

  /* Filter Container */
  .filter-container {
    background: white;
    border: 1px solid var(--border-grey);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 1.5rem;
  }

  .filter-header {
    margin-bottom: 1rem;
  }

  .filter-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--charcoal);
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .status-filters {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .status-btn {
    padding: 0.5rem 0.875rem;
    font-size: 0.875rem;
    border: 1px solid var(--border-grey);
    border-radius: 6px;
    background: white;
    color: var(--text-grey);
    cursor: pointer;
    transition: all 0.2s;
    white-space: nowrap;
    font-weight: 500;
  }

  .status-btn:hover {
    border-color: var(--blue);
    color: var(--blue);
  }

  .status-btn.active {
    background: var(--blue);
    border-color: var(--blue);
    color: white;
  }

  .status-btn .count {
    font-size: 0.75rem;
    opacity: 0.8;
  }

  .filter-controls {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-grey);
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .filter-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--text-grey);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* Bookings Container */
  .bookings-container {
    max-width: 100%;
  }

  .booking-group {
    margin-bottom: 2rem;
  }

  .date-header {
    font-size: 1rem;
    font-weight: 600;
    color: var(--charcoal);
    margin-bottom: 0.75rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--border-grey);
  }

  /* Booking Card */
  .booking-card {
    background: white;
    border: 1px solid var(--border-grey);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 0.75rem;
    transition: box-shadow 0.2s;
  }

  .booking-card:hover {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  }

  .booking-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 0.75rem;
  }

  .booking-info {
    flex: 1;
    min-width: 0;
  }

  .client-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--charcoal);
    margin-bottom: 0.25rem;
  }

  .client-link {
    color: var(--charcoal);
    text-decoration: none;
    transition: color 0.2s;
  }

  .client-link:hover {
    color: var(--blue);
  }

  .booking-meta {
    font-size: 0.875rem;
    color: var(--text-grey);
    margin-bottom: 0.25rem;
  }

  .meta-separator {
    margin: 0 0.5rem;
    opacity: 0.5;
  }

  .booking-time {
    font-size: 0.875rem;
    color: var(--text-grey);
  }

  .booking-badges {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-end;
  }

  .status-badge {
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 12px;
    white-space: nowrap;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .status-badge.confirmed {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }

  .status-badge.pending {
    background: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
  }

  .status-badge.cancelled {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }

  .status-badge.unknown {
    background: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
  }

  .created-badge {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    color: var(--text-grey);
    background: var(--light-grey);
    border: 1px solid var(--border-grey);
    border-radius: 4px;
  }

  /* Booking Actions */
  .booking-actions {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .btn-action {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    font-weight: 500;
    border-radius: 6px;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s;
    border: 1px solid;
  }

  .btn-view {
    background: var(--blue);
    border-color: var(--blue);
    color: white;
  }

  .btn-view:hover {
    background: #2366d1;
    border-color: #2366d1;
    color: white;
  }

  .btn-edit, .btn-confirm, .btn-decline {
    background: white;
  }

  .btn-edit {
    border-color: var(--border-grey);
    color: var(--text-grey);
  }

  .btn-edit:hover {
    border-color: var(--blue);
    color: var(--blue);
  }

  .btn-confirm {
    border-color: var(--success);
    color: var(--success);
  }

  .btn-confirm:hover {
    background: var(--success);
    color: white;
  }

  .btn-decline {
    border-color: var(--danger);
    color: var(--danger);
  }

  .btn-decline:hover {
    background: var(--danger);
    color: white;
  }

  /* No Bookings */
  .no-bookings {
    text-align: center;
    padding: 3rem 1rem;
    color: var(--text-grey);
  }

  .no-bookings i {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.3;
  }

  .no-bookings p {
    font-size: 1rem;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .filter-container {
      padding: 0.75rem;
    }

    .status-filters {
      gap: 0.375rem;
    }

    .status-btn {
      padding: 0.375rem 0.625rem;
      font-size: 0.8125rem;
      flex: 1;
      min-width: calc(50% - 0.25rem);
    }

    .filter-controls {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }

    .booking-header {
      flex-direction: column;
      gap: 0.75rem;
    }

    .booking-badges {
      flex-direction: row;
      align-items: center;
      width: 100%;
    }

    .booking-actions {
      gap: 0.375rem;
    }

    .btn-action {
      flex: 1;
      min-width: calc(50% - 0.25rem);
      padding: 0.5rem 0.75rem;
      font-size: 0.8125rem;
      text-align: center;
      justify-content: center;
    }

    .date-header {
      font-size: 0.9375rem;
    }
  }

  @media (max-width: 480px) {
    .status-btn {
      min-width: 100%;
    }
  }
</style>